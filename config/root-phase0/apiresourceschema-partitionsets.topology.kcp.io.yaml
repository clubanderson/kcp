apiVersion: apis.kcp.io/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v221118-9364e75c.partitionsets.topology.kcp.io
spec:
  group: topology.kcp.io
  names:
    categories:
    - kcp
    kind: PartitionSet
    listKind: PartitionSetList
    plural: partitionsets
    singular: partitionset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Count of the partitions belonging the PartitionSet
      jsonPath: .status.count
      name: Count
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      description: PartitionSet defines a target domain and dimensions to divide a
        set of shards into 1 or more partitions.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: spec holds the desired state.
          properties:
            dimensions:
              description: dimensions (optional) are used to group shards into partitions
              items:
                type: string
              type: array
            selector:
              description: selector (optional) is a label selector that filters shard
                targets.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
              x-kubernetes-map-type: atomic
          type: object
        status:
          description: status holds information about the current status
          properties:
            count:
              description: count is the total number of partitions.
              type: integer
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}
